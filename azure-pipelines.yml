trigger:
  branches:
    include:
      - master
      - staging
      - development

pr:
  branches:
    include:
      - master
      - staging
      - development
      - feature_*

variables:
  - group: analysis-group

stages:
- stage: Compile
  pool:
      vmImage: 'ubuntu-latest'
  jobs:
    - job: Compile
      displayName: Build and Test
      steps:

      # Prepare SonarCloud Analysis
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'sonar-cloud'
          organization: '2105-may24-devops'
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: '$(sonarProjectKey)'
          cliSources: '.'
          extraProperties: 'sonar.java.binaries=./build/**/*'
    
      # Build and Test application

      - script: chmod +x gradlew && ./gradlew build jacocoTestReport
      
      - task: SonarCloudAnalyze@1

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'

- stage: DockerBuildPush
  pool:
      vmImage: 'ubuntu-latest'
  jobs:
  - job: DockerBuildPush
    steps:
    
    # Build jar file.

    - script: chmod +x gradlew && ./gradlew build
    
    
    # Create image with build specificity.
    - task: Docker@2
      inputs:
        containerRegistry: 'docker-service'
        repository: 'cog-devops-lab'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(Build.BuildNumber)'
        addPipelineData: false

    # Create image with latest.   

    - task: Docker@2
      inputs:
        containerRegistry: 'docker-service'
        repository: 'cog-devops-lab'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
        addPipelineData: false

# - stage: Deploy
#   pool:
#         vmImage: 'ubuntu-latest'
#   displayName: Deploy to AKS Cluster
#   dependsOn: Check
#   condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
#   jobs:
#     - deployment: DevDeploy
#       displayName: Deploy to AKS Dev Environment
#       condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
#       environment: dev
#       strategy:
#         runOnce:
#           deploy:
#             steps:
#             - checkout: self
#             - task: KubernetesManifest@0
#               inputs:
#                 action: 'deploy'
#                 kubernetesServiceConnection: 'cog-aks-cluster'
#                 namespace: 'anthony'
#                 manifests: './kubernetes.yml'